name: "Test"
# on: push
on:
  pull_request:
    types: [edited]

jobs:
  test:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: "Install Node"
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - name: "Install Deps"
        run: npm install
      - name: "Test"
        run: npx vitest --coverage.enabled true

      - name: "Upload Coverage"
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/index.html

  report:
    needs: test
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Downlod Artifacts 
        uses: actions/download-artifact@v4
      
      - name: List Files
        run: ls -R

  comment:
    needs: report
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      id-token: write

    # if: "!startsWith(github.event.pull_request.title, 'Update')"

    steps:
      - name: PR title
        run: echo "${{ github.event.pull_request.title }}"

      - name: Add comment to PR
        uses: actions/github-script@v5
        with:
          # github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Test comment!'
            })
    # runs-on: ubuntu-latest

    # permissions:
    #   contents: write
    #   pull-requests: write
    #   repository-projects: write
    #   id-token: write

    # steps:
    #   # - name: Checkout
    #   #   uses: actions/checkout@v4

    #   # - name: "Report Coverage"
    #   #   shell: bash
    #   #   run: |
    #   #     value=`cat coverage/index.html`
    #   #     echo The result is $value

    #   - name: Add comment 
    #     uses: actions/github-script@v5
    #     with:
    #       github-token: ${{secrets.GITHUB_TOKEN}}
    #       script: |
    #         github.rest.issues.createComment({
    #           issue_number: context.issue.number,
    #           owner: context.repo.owner,
    #           repo: context.repo.repo,
    #           body: 'Test comment'
    #         })