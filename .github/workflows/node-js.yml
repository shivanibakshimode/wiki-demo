# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "master" ]      # on release branch PR to master

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: node sample.js
    # - name: Check out repository code
    #   uses: actions/checkout@v3
    #   with:
    #     repository: mode/muze
    #     fetch-depth: 0
    - name: Set git configs
      run: |
        git config --global user.name "shivanibakshimode"
        git config --global user.email "shivani.bakshi@mode.com"
    - name: Extract release version
      run: echo "RELEASE_VERSION=$(node scripts/extract-release-version.js)" >> $GITHUB_ENV
    - name: Setup Github CLI
      env:
        GITHUB_TOKEN_ENV_VALUE: ${{ secrets.WORKFLOW_ACTION_GITHUB_TOKEN }}
      run: echo "GITHUB_TOKEN=$(echo $GITHUB_TOKEN_ENV_VALUE)" >> $GITHUB_ENV
    - name: Create a temp md file
      run: |
        touch ${{ runner.temp }}/temp_api.md
        cat ./api.md > ${{ runner.temp }}/temp_api.md
    - name: Check out repository code
      uses: actions/checkout@v3
      with:
        repository: shivanibakshimode/wiki-demo.wiki
        fetch-depth: 0
    - name: Update "${RELEASE_VERSION}".md file and push to remote
      run: |
        touch "${RELEASE_VERSION}".md
        cat ${{ runner.temp }}/temp_api.md > "${RELEASE_VERSION}".md
        git add "${RELEASE_VERSION}".md
        git commit -m "Updated "${RELEASE_VERSION}".md"
        git push
